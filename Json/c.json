{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Start1": {
		"prefix": "NguyenPhong",
		"body": [
			"#include<bits/stdc++.h>",
			"",
			"#define ll long long",
			"#define ld long double",
			"",
			"#define X first",
			"#define Y second",
			"",
			"#define faster() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)",
			"#define ce(x) cerr << #x << \" = \" << x << endl",
			"#define len(x) x.size();",
			"",
			"#define getbit(x,n) ((x >> n) & 1);",
			"#define turnoff(x,n) (x & ~(1 << n));",
			"#define turnon(x,n) (x | (1<<n))",
			"",
			"#define vi vector<ll>",
			"#define ii pair<ll, ll>",
			"#define vii vector<pair<ll, ll>>",
			"#define matrix vector<vi>",
			"",
			"const double pi = 1.00 * acos(-1.00);",
			"const long long  MAX = 100005;",
			"const long long  INF = 1e18;",
			"const long long mod = 1e9 + 7;",
			"",
			"const int dx[] = {0,0,-1,1};",
			"const int dy[] = {1,-1,0,0};",
			"",
			"//  code là cái gì ?",
			"",
			"using namespace std;",
			"",
			"",
			"",
			"",
			"signed main(){",
			"    faster();",
			"    ",
			"    ",
			"    ",
			"    ",
			"    #ifndef LOCAL_DEFINE",
            "        cerr << \"\\nTime elapsed: \" << fixed << setprecision(9) << (double)clock() / CLOCKS_PER_SEC << \"s.\";",
            "    #endif",
			"    return 0;",
			"}",
		],
		"description": "."
	},
}